Set
		Set은 인터페이스이다. Set를 지정받아 구현한 클래스는 아래와 같다.
		List와 마찬가지로 Collection 인터페이스를 상속받은 인터페이스이다.
		
		HashSet //여러가지가 있지만 실무에서 사용하는 HashSet만 설명할거임.
				집합에서 중복되는 원소를 포함할 수 없는 것처럼
				HashSet이라는 자료구조는 중복되는 값을 무시한다.
				저장된 값들은 인덱스가 없기 때문에 순서가 없다.
				//순서가 없다는 건 절대 가져올 수도 없다는 것이다.	
				//번지 자체가 없다.
				//값을 가져올 수도, 중복된 값을 넣을 수도 없다는 것....
				값의 유무 검사에 특화되어 있는 자료구조이고
				//목적: 조회//AB형, 혈앵혁 예시 - 해시셋 안됨.
				//연구원이 혈액형 연구 - 혈액형 각 1개씩만 필요 - 이럴 때 해시셋
				해시코드로 유무 검사가 진행되기 때문에 속도가 상대적으로 좋다.
				
Iterator
				순서가 없는 객체에 순서를 부여하거나, 순서가 있어도 Iterator방식의
				순서로 변경하고자 할 때 사용한다.
				이 때 해당 객체에 iterator() 메소드를 붙여주고, 이 메소드의 리턴타입은
				Iterator 타입이다.
				hasNext()를 사용하면, 다음 값이 있는지 검사하고, next()를 사용해서 값을 가져올 수 있다.

// Set은 집합, List는 목록

==============================================================================
Map	
		//이 전에 배웠던 2개의 자료구조와 비슷하게 생각하면 안됨.
		Set과 Collection 2개의 자료구조를 하나로 합친 자료구조이다.
		List와 Set처럼 Collection을 상속 받지 않았고, 독립적인 자료구조이다.

		HashMap(서버 간 데이터 교환)
				Key와 Value, 한 쌍으로 저장되며, 검색의 목적을 가지고 있다.
				Key에 중복된 값을 넣으면, Value가 최근 값으로 수정되고
				중복되지 않은 값을 넣으면 새롭게 추가된다.
				Value는 중복이 가능하다.
		//해쉬맵은 put과 get만 잘 알면 됨. 다른 건 필요없다고 하심.


//JSONArray 는 ArayyList 와 비슷하고
//JSONObject 는 HashSet 과 비슷하다.































